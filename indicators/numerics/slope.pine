// The MIT License (MIT)
// Â© mihakralj
//@version=6
indicator("Slope (Linear Regression)", "Slope", overlay=false, precision=8)

//@function Calculates slope (linear regression) 
//@param src Source series to calculate slope from
//@param len Lookback period for calculation
//@returns Slope value properly calculated
slope(series float src, simple int len) =>
    if len <= 1
        runtime.error("Period must be greater than 1")
    var array<float> values = array.new_float(len, 0.0)
    var array<int> indices = array.new_int(len, 0)
    var int nextIndex = 0, var int validCount = 0
    if not na(src)
        array.set(values, nextIndex, src)
        array.set(indices, nextIndex, bar_index)
        validCount := math.min(validCount + 1, len)
        nextIndex := (nextIndex + 1) % len
    if validCount < 2
        na
    else
        float sumX = 0.0, float sumY = 0.0
        float sumXY = 0.0, float sumX2 = 0.0
        for i = 0 to validCount - 1
            float x = array.get(indices, i)
            float y = array.get(values, i)
            sumX += x, sumY += y
            sumXY += x * y,  sumX2 += x * x
        float n = validCount
        float divisor = n * sumX2 - sumX * sumX
        divisor != 0.0 ? (n * sumXY - sumX * sumY) / divisor : na


// ---------- Main loop ----------

// Inputs
i_period = input.int(14, "Period", minval=2)
i_source = input.source(close, "Source")

// Calculation
s = slope(i_source, i_period)

// Plot
plot(s, "Slope", color.new(color.yellow, 0), 2)
