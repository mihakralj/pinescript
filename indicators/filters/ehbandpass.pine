// The MIT License (MIT)
// Â© mihakralj
//@version=6
indicator("Ehlers Bandpass Filter", "EHBandpass", overlay=false)

//@function Optimized Ehlers Bandpass Filter combining highpass and lowpass filters
//@param source Series to calculate bandpass from
//@param lp Lower cutoff period for highpass filter
//@param up Upper cutoff period for lowpass filter
//@returns Bandpass filtered value
ehbp(series float src, simple int lp, simple int up) =>
    // Highpass stage
    a1 = math.exp(-1.414 * math.pi / lp), b1 = 2 * a1 * math.cos(1.414 * 180 / lp)
    c3 = -a1 * a1, c2 = b1, c1 = (1 + c2 - c3) / 4
    var float hp = 0
    hp := bar_index < 3 ? 0 : c1 * (src - 2 * src[1] + src[2]) + c2 * hp[1] + c3 * hp[2]

    // Lowpass stage
    a2 = math.exp(-1.414 * math.pi / up), b2 = 2 * a2 * math.cos(1.414 * 180 / up)
    k3 = -a2 * a2, k2 = b2, k1 = 1 - k2 - k3
    var float bp = hp
    bp := bar_index < 3 ? hp : k1 * (hp + hp[1]) / 2 + k2 * bp[1] + k3 * bp[2]
    bp

// ---------- Main loop ----------

// Inputs
i_lower = input.int(10, "Longer Period", minval=1)
i_upper = input.int(20, "Shorter Period", minval=1)
i_source = input.source(close, "Source")

// Calculation
ehbp_value = ehbp(i_source, i_lower, i_upper)

// Plot
plot(ehbp_value, "EHBandpass", color.new(color.yellow, 0), 2)
