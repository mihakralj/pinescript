// The MIT License (MIT)
// Â© mihakralj
//@version=6
indicator("Ehlers Supersmooth Lowpass Filter", "EHLowpass", overlay=true)

//@function Calculates Ehlers Supersmooth Lowpass Filter
//@param source Series to calculate EHLP from
//@param length Number of bars used in the calculation
//@returns EHLP value with optimized smoothing
ehlp(series float src, simple int length) =>
    a1 = math.exp(-1.414 * math.pi / length)
    b1 = 2 * a1 * math.cos(1.414 * 180 / length)
    c2 = b1
    c3 = -a1 * a1
    c1 = 1 - c2 - c3
    var float ss = src
    if bar_index < 3
        ss := src
    else
        ss := c1 * (src + src[1]) / 2 + c2 * ss[1] + c3 * ss[2]
    ss

// ---------- Main loop ----------

// Inputs
i_length = input.int(20, "Length", minval=1)
i_source = input.source(close, "Source")

// Calculation
ehlp_value = ehlp(i_source, i_length)

// Plot
plot(ehlp_value, "EHLowpass", color.new(color.green, 0), 2)

// Alert
alertcondition(ta.cross(i_source, ehlp_value), "Price Crosses EHLowpass", "Price crossed EHLowpass on {{ticker}}")
