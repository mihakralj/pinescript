// The MIT License (MIT)
// Â© mihakralj
//@version=6
indicator("Ehlers Highpass Filter", "EHHighpass", overlay=true)

//@function Calculates Ehlers Highpass Filter
//@param source Series to calculate EHHP from
//@param length Number of bars used in the calculation
//@returns EHHP value with optimized filtering
ehhp(series float src, simple int length) =>
    a1 = math.exp(-1.414 * math.pi / length)
    b1 = 2 * a1 * math.cos(1.414 * 180 / length)
    c2 = b1
    c3 = -a1 * a1
    c1 = (1 + c2 - c3) / 4
    var float hp = 0
    if bar_index < 3
        hp := 0
    else
        hp := c1 * (src - 2 * src[1] + src[2]) + c2 * hp[1] + c3 * hp[2]
    hp

// ---------- Main loop ----------

// Inputs
i_length = input.int(20, "Length", minval=1)
i_source = input.source(close, "Source")

// Calculation
ehhp_value = ehhp(i_source, i_length)

// Plot
plot(ehhp_value, "EHHighpass", color.new(color.red, 0), 2)

// Alert
alertcondition(ta.cross(i_source, ehhp_value), "Price Crosses EHHighpass", "Price crossed EHHighpass on {{ticker}}")
