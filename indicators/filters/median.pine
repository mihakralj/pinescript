// The MIT License (MIT)
// Â© mihakralj
//@version=6
indicator("Median Filter (MEDIAN)", "MEDIAN", overlay=true, timeframe="", timeframe_gaps=true)

//@function Applies median filter to input series
//@doc https://github.com/mihakralj/pinescript/blob/main/indicators/filters/median.md
//@param src Input series to filter
//@param length Window size (rounded down to nearest odd number)
//@returns Filtered series
median(series float src, simple int length) =>
    int adj_length = math.max(1, length % 2 == 0 ? length - 1 : length)
    if na(src)
        na
    else
        var array<float> window = array.new_float(0)
        array.clear(window)
        int valid_count = 0
        for i = 0 to adj_length - 1
            float val = src[i]
            if not na(val)
                array.push(window, val)
                valid_count += 1
        if valid_count < math.ceil(adj_length / 2.0)
            src
        else
            array.sort(window)
            int mid = int(array.size(window) / 2)
            if array.size(window) % 2 == 1
                array.get(window, mid)  // Odd number of values
            else
                (array.get(window, mid - 1) + array.get(window, mid)) / 2.0  // Even number - average middle two

// ---------- Main loop ----------

// Inputs
i_length = input.int(5, "Length", minval=1, step=2)
i_source = input.source(close, "Source")

// Calculation
median_val = median(i_source, i_length)

// Plot
plot(median_val, "Median", color=color.new(color.yellow, 0, color=color.yellow, linewidth=2), linewidth=2)
