// The MIT License (MIT)
// Â© mihakralj
// Indicator algorithm (C) 2004-2024 John F. Ehlers
//@version=6
indicator("Ehlers Supersmooth Lowpass Filter", "EHSSF", overlay=true)

//@function Calculates Ehlers Supersmooth Lowpass Filter
//@doc https://github.com/mihakralj/pinescript/blob/main/indicators/filters/ehssf.md
//@param source Series to calculate EHLP from
//@param length Number of bars used in the calculation
//@returns EHSSF value with optimized smoothing
ehssf(series float src, simple int length) =>
    var float SQRT2_PI = math.sqrt(2) * math.pi
    var float ssf = 0.0, var float c1 = 0.0, var float c2 = 0.0, var float c3 = 0.0
    var int prev_length = 0
    if prev_length != length
        arg = SQRT2_PI / float(length)
        exp_arg = math.exp(-arg)
        c2 := 2 * exp_arg * math.cos(arg)
        c3 := -exp_arg * exp_arg
        c1 := 1 - c2 - c3
        prev_length := length
    float ssrc = nz(src, src[1])
    float src1 = nz(src[1], ssrc)
    float src2 = nz(src[2], src1)
    ssf := c1 * ssrc + c2 * nz(ssf[1], src1) + c3 * nz(ssf[2], src2)
    ssf

// ---------- Main loop ----------

// Inputs
i_length = input.int(20, "Length", minval=1)
i_source = input.source(close, "Source")

// Calculation
ssf = ehssf(i_source, i_length)

// Plot
plot(ssf, "EHLowpass", color.new(color.yellow, 0), 2)
