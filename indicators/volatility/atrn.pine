// The MIT License (MIT)
// Â© mihakralj
//@version=6
indicator("Average True Range Normalized", "ATRN", overlay=false, format=format.percent, precision=2)

//@function Calculates the Average True Range Normalized (ATRN) relative to its maximum value over a longer period.
//@doc Calculates ATRN = ATR / ta.highest(ATR, 10 * length) using Wilder's Smoothing (RMA) for ATR, all within one function.
//@param length The period length for the ATR calculation. The highest uses a length of 10 * length.
//@returns The ATRN value, normalized relative to its maximum over the longer period.
//@optimized for performance
atrn(simple int length) =>
    if length <= 0
        runtime.error("Period must be greater than 0")
    var float prevClose = close
    float tr1 = high - low
    float tr2 = math.abs(high - prevClose)
    float tr3 = math.abs(low - prevClose)
    float trueRange = math.max(tr1, tr2, tr3)
    prevClose := close
    var float EPSILON = 1e-10
    var float raw_rma = 0.0
    var float e = 1.0
    float atrValue = na
    if not na(trueRange)
        float alpha = 1.0 / float(length)
        raw_rma := (raw_rma * (length - 1) + trueRange) / length
        e := (1 - alpha) * e
        atrValue := e > EPSILON ? raw_rma / (1.0 - e) : raw_rma
    int lookbackWindow = math.min(10 * length, bar_index+1)
    float maxAtr = ta.highest(atrValue, lookbackWindow)
    float minAtr = ta.lowest(atrValue, lookbackWindow)
    minAtr < maxAtr ? (atrValue - minAtr) / (maxAtr - minAtr) : 0.5

// ---------- Main loop ----------

// Inputs
i_length = input.int(14, "Length", minval=1, tooltip="Number of bars used for the ATR calculation")

// Calculation
atrnValue = atrn(i_length) // Call the custom atrn function

// Plot
plot(atrnValue, "ATRN", color.new(color.aqua, 0), 2)
