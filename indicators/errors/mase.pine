// The MIT License (MIT)
// Â© mihakralj
//@version=6
indicator("Mean Absolute Scaled Error (MASE)", "MASE")

//@function Calculates Mean Absolute Scaled Error between two sources using SMA for averaging
//@doc https://github.com/mihakralj/pinescript/blob/main/indicators/errors/mase.md
//@param source1 First series to compare
//@param source2 Second series to compare
//@param period Lookback period for error averaging
//@returns MASE value averaged over the specified period using SMA
mase(series float source1, series float source2, simple int period) =>
    if period <= 0
        runtime.error("Period must be greater than 0")
    int p = math.min(math.max(1, period), 4000)
    error = source1 - source2
    abs_error = math.abs(error)
    var float scale = na
    if na(scale)
        sum = 0.0
        count = 0
        for i = 1 to p
            if not na(source1[i]) and not na(source1[i-1])
                sum += math.abs(source1[i] - source1[i-1])
                count += 1
        scale := count > 0 ? sum / count : 1.0
    scaled_error = abs_error / (scale == 0 ? 1.0 : scale)
    var float[] buffer = array.new_float(p, na)
    var int head = 0
    var float sum = 0.0
    var int valid_count = 0
    float oldest = array.get(buffer, head)
    if not na(oldest)
        sum := sum - oldest
        valid_count := valid_count - 1
    if not na(scaled_error)
        sum := sum + scaled_error
        valid_count := valid_count + 1
    array.set(buffer, head, scaled_error)
    head := (head + 1) % p
    valid_count > 0 ? sum / valid_count : scaled_error


// ---------- Main loop ----------

// Inputs
i_source1 = input.source(close, "Source")
i_period = input.int(100, "Period", minval=1)
i_source2 = ta.ema(i_source1, i_period)

// Calculation
error = mase(i_source1, i_source2, i_period)

// Plot
plot(error, "MASE", color.new(color.red, 60, color=color.yellow, linewidth=2), linewidth = 2, style = plot.style_area)
plot(i_source2, "EMA", color.new(color.yellow, 0, linewidth=2), linewidth = 1, style = plot.style_line, force_overlay = true)
