// The MIT License (MIT)
// Â© mihakralj
//@version=6
indicator("Zero-Lag Double Exponential Moving Average (ZLDEMA)", "ZLDEMA", overlay=true)

//@function Calculates ZLEMA using zero-lag price and exponential smoothing with compensator
//@doc https://github.com/mihakralj/pinescript/blob/main/indicators/trends_IIR/zldema.md
//@param source Series to calculate ZLDEMA from
//@param alpha Smoothing factor (typically 2/(period+1))
//@returns ZLDEMA value with zero-lag effect applied
//@optimized for performance and dirty data
zldema(series float source,simple int period)=>
    if period<=0
        runtime.error("Period must be greater than 0")
    simple float alpha=2.0/(period+1.0)
    simple int lag=math.max(1,math.round((period-1)/2))
    var priceBuffer=array.new<float>(lag+1,0.0)
    var float raw_ema1=na
    var float raw_ema2=na
    var float zldemaValue=na
    if not na(source)
        if na(zldemaValue)
            zldemaValue:=source
            raw_ema1:=source
            raw_ema2:=source
            array.fill(priceBuffer,source)
        else
            array.shift(priceBuffer)
            array.push(priceBuffer,source)
            float laggedPrice=array.get(priceBuffer,0)
            float zlema_input=2*source-laggedPrice
            raw_ema1:=alpha*(zlema_input-raw_ema1)+raw_ema1
            raw_ema2:=alpha*(raw_ema1-raw_ema2)+raw_ema2
            zldemaValue:=(1.5*raw_ema1)-(0.5*raw_ema2)
    zldemaValue


// ---------- Main loop ----------

// Inputs
i_period = input.int(10, "Period", minval=1)
i_source = input.source(close, "Source")

// Calculations
zldema = zldema(i_source, i_period) 

// Plots
plot(zldema, "ZLDEMA", color.new(color.yellow, 0), 2)
