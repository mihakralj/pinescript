// The MIT License (MIT)
// Â© mihakralj
//@version=6
indicator("Pascal Weighted Moving Average", "PWMA", overlay=true)

//@function Calculates PWMA using Pascal's triangle coefficients as weights with compensator
//@doc https://github.com/mihakralj/pinescript/blob/main/docs/trends/pwma.md
//@param source Series to calculate PWMA from
//@param period Lookback period - FIR window size
//@returns PWMA value, calculates from first bar using available data
pwma(series float source, simple int period) =>
    if period <= 0
        runtime.error("Period must be greater than 0")
    int p = math.max(1, math.min(math.min(bar_index + 1, period), 1020))
    array<float> weights = array.new_float(p, 0.0)
    weights.set(0, 1.0)  // First coefficient is always 1
    if p > 1
        for i = 1 to p - 1
            weights.set(i, weights.get(i-1) * (p - i) / i)
    float sum = 0.0
    float weight_sum = 0.0
    for i = 0 to p - 1
        price = source[i]
        if not na(price)
            float w = weights.get(i)
            sum += price * w
            weight_sum += w
    weight_sum > 0 ? sum / weight_sum : source

    
// ---------- Main loop ----------

// Inputs
i_period = input.int(10, "Period", minval=1)
i_source = input.source(close, "Source")

// Calculation
pwma_value = pwma(i_source, i_period)

// Plot
plot(pwma_value, "PWMA", color.new(color.yellow, 0), 2)

// Alert
alertcondition(ta.cross(i_source, pwma_value), "Price Crosses PWMA", "Price crossed PWMA on {{ticker}}")
