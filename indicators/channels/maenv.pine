// The MIT License (MIT)
// Â© mihakralj
//@version=6
indicator("MA Envelope (MAE)", "MAE", overlay=true)

//@function Calculates MA Envelope bands using a fixed percentage
//@doc https://github.com/mihakralj/pinescript/blob/main/indicators/channels/maenv.md
//@param source Series to calculate moving average from
//@param length Lookback period for MA calculation
//@param percentage Distance of bands from MA as percentage
//@param ma_type Type of moving average (0:SMA, 1:EMA, 2:WMA)
//@returns tuple with [middle, upper, lower] band values
//@optimized for performance and dirty data
mae(series float source, simple int length, simple float percentage, simple int ma_type = 1) =>
    if length <= 0 or percentage <= 0.0
        runtime.error("Length and percentage must be greater than 0")
    float middle = na
    if ma_type == 0  // SMA
        var int head = 0, var int count = 0
        var array<float> buffer = array.new_float(length, na)
        var float sum = 0.0
        float oldest = array.get(buffer, head)
        if not na(oldest)
            sum -= oldest
            count -= 1
        float current = nz(source)
        sum += current
        count += 1
        array.set(buffer, head, current)
        head := (head + 1) % length
        middle := sum / count
    else if ma_type == 1  // EMA
        var float alpha = 2.0 / (length + 1)
        var float sum = 0.0, var float weight = 0.0
        if na(sum)
            sum := source
            weight := 1.0
        sum := sum * (1 - alpha) + source * alpha
        weight := weight * (1 - alpha) + alpha
        middle := sum / weight
    else if ma_type == 2  // WMA
        float norm = 0.0, float sum = 0.0
        for i = 0 to length - 1
            w = (length - i) * length
            norm += w
            sum += nz(source[i]) * w
        middle := sum / norm
    else
        runtime.error("MA type must be 0 (SMA), 1 (EMA), or 2 (WMA)")
    float dist = middle * percentage / 100
    [middle, middle + dist, middle - dist]

// ---------- Main loop ----------

// Inputs
i_source = input.source(close, "Source")
i_length = input.int(20, "Length", minval=1)
i_percentage = input.float(1.0, "Percentage", minval=0.001)
i_ma_type = input.int(1, "MA Type", minval=0, maxval=2, tooltip="0:SMA, 1:EMA, 2:WMA")

// Calculation
[middle, upper, lower] = mae(i_source, i_length, i_percentage, i_ma_type)

// Plot
plot(middle, "Middle", color.new(color.yellow, 0, linewidth=2), 2)
p1 = plot(upper, "Upper", color.new(color.blue, 50, color=color.yellow, linewidth=2), 1)
p2 = plot(lower, "Lower", color.new(color.blue, 50, color=color.yellow, linewidth=2), 1)
fill(p1, p2, title="Background", color=color.new(color.blue, 90))
