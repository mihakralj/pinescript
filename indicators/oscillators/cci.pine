// The MIT License (MIT)
// Â© mihakralj
//@version=6
indicator("Commodity Channel Index (CCI)", "CCI", overlay=false)

//@function Calculates Commodity Channel Index measuring price deviation from its mean
//@doc https://github.com/mihakralj/pinescript/blob/main/indicators/oscillators/cci.md
//@param length Lookback period for calculations
//@returns CCI value with statistical mean deviation normalization
cci(simple int length) =>
    if length <= 0
        runtime.error("Length must be greater than 0")
    float tp = (high + low + close) / 3.0
    var int p = math.max(1, length)
    var array<float> buffer = array.new_float(p, na)
    var int head = 0, var float sum = 0.0, var int count = 0
    float oldest = array.get(buffer, head)
    if not na(oldest)
        sum -= oldest
        count -= 1
    if not na(tp)
        sum += tp
        count += 1
    array.set(buffer, head, tp)
    head := (head + 1) % p
    float sma = count > 0 ? sum / count : tp
    float dev_sum = 0.0
    int dev_count = 0
    for i = 0 to p - 1
        float val = array.get(buffer, i)
        if not na(val)
            dev_sum += math.abs(val - sma)
            dev_count += 1
    float mean_dev = dev_count > 0 ? dev_sum / dev_count : 0.0
    mean_dev > 0.0 ? (tp - sma) / (0.015 * mean_dev) : 0.0

// ---------- Main loop ----------

// Inputs
i_length = input.int(20, "Length", minval=1)
i_ob_level = input.int(100, "Overbought Level", minval=0)
i_os_level = input.int(-100, "Oversold Level", maxval=0)

// Calculation
float cci_value = cci(i_length)

// Color logic
color cci_color = cci_value > i_ob_level ? color.green :
                 cci_value < i_os_level ? color.red :
                 color.yellow

// Plots
plot(i_ob_level, "Overbought", color.new(color.gray, 50), 1, plot.style_line)
plot(i_os_level, "Oversold", color.new(color.gray, 50), 1, plot.style_line)
plot(0, "Zero Line", color.new(color.gray, 50), 1, plot.style_line)
plot(cci_value, "CCI", cci_color, 2)

// Legend
var table t = table.new(position.top_right, 2, 1, bgcolor = color.new(color.black, 70))
table.cell(t, 0, 0, "CCI", text_color = cci_color)
table.cell(t, 1, 0, str.tostring(math.round(cci_value, 2)), text_color = cci_color)
