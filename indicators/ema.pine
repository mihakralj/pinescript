// The MIT License (MIT)
// Â© mihakralj
//@version=6
indicator("Exponential Moving Average", "EMA", overlay=true)

//@function Calculates EMA using exponential smoothing with compensator for early values
//@param source Series to calculate EMA from
//@param alpha smoothing factor, used to calculate alpha as 2/(period+1)
//@returns EMA value from first bar with proper compensation
ema(series float source, simple float alpha) =>
    if alpha <= 0
        runtime.error("Alpha must be greater than 0")
    var float EPSILON = 1e-10        // constant - smalest relevant value
    var float raw_ema = 0.0
    var float e = 1.0
    raw_ema := alpha * (source - raw_ema) + raw_ema
    e := (1 - alpha) * e
    e > EPSILON ? raw_ema / (1.0 - e) : raw_ema




// Inputs
i_period = input.int(5000, "Period", minval=1)
i_source = input.source(close, "Source")

// Calculations
legacyEma = ta.ema(i_source, i_period)
ema = ema(i_source, 2.0/(float(i_period)+1.0))  // calculate alpha from period

// Plots
plot(legacyEma, "Built-in EMA", color.new(color.blue, 0), 4)
plot(ema, "Custom EMA", color.new(color.yellow, 0), 2)

// Alert
alertcondition(ta.cross(i_source, ema), "Price Crosses EMA", "Price crossed EMA on {{ticker}}")
