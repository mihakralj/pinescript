// The MIT License (MIT)
// Â© mihakralj
//@version=6
indicator("Arnaud Legoux Moving Average", "ALMA", overlay=true)

//@function Calculates ALMA using Gaussian distribution weights
//@doc https://github.com/mihakralj/pinescript/blob/main/indicators/trends_FIR/alma.md
//@param source Series to calculate ALMA from
//@param period Lookback period - window size
//@param offset Controls the Gaussian peak location (0 to 1)
//@param sigma Controls the Gaussian distribution width/curve shape
//@returns ALMA value, calculates from first bar using available data
alma(series float source, simple int period, simple float offset = 0.85, simple float sigma = 6.0) =>
    if period <= 0
        runtime.error("Period must be greater than 0")
    if offset < 0 or offset > 1
        runtime.error("Offset must be between 0 and 1")
    if sigma <= 0
        runtime.error("Sigma must be greater than 0")

    int p = math.max(1, math.min(math.min(bar_index + 1, period), 4000))
    if p <= 0
        source
    else
        float m = (1 - offset) * (p - 1)
        float s = p / sigma
        float s2 = 2 * math.pow(s, 2)
        float sum = 0.0
        float weight_sum = 0.0
        for i = 0 to p - 1
            price = source[i]
            if not na(price)
                float weight = math.exp(-math.pow(i - m, 2) / s2) // Gaussian weight
                sum += price * weight
                weight_sum += weight
        weight_sum > 0 ? sum / weight_sum : source


// ---------- Main loop ----------

// Inputs
i_period = input.int(50, "Period", minval=1, tooltip="Number of bars used in the calculation")
i_offset = input.float(0.85, "Offset", minval=0, maxval=1, step=0.01)
i_sigma = input.float(6.0, "Sigma", minval=0.1, maxval=20, step=0.1)
i_source = input.source(close, "Source")

// Calculation
alma_value = alma(i_source, i_period, i_offset, i_sigma)

// Plot
plot(alma_value, "ALMA", color.new(color.yellow, 0), 2)

// Alert
alertcondition(ta.cross(i_source, alma_value), "Price Crosses ALMA", "Price crossed ALMA on {{ticker}}")
