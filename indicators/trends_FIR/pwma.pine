// The MIT License (MIT)
// Â© mihakralj
//@version=6
indicator("Pascal Weighted Moving Average (PWMA)", "PWMA", overlay=true)

//@function Calculates PWMA using Pascal's triangle coefficients as weights with compensator
//@doc https://github.com/mihakralj/pinescript/blob/main/indicators/trends_FIR/pwma.md
//@param source Series to calculate PWMA from
//@param period Lookback period - FIR window size
//@returns PWMA value, calculates from first bar using available data
//@optimized for performance and dirty data
pwma(series float source, simple int period) =>
    if period <= 0
        runtime.error("Period must be greater than 0")
    int p = math.min(bar_index + 1, period)
    var array<float> weights = array.new_float(1, 1.0)
    var int last_p = 1
    if last_p != p
        weights := array.new_float(p, 0.0)
        array.set(weights, 0, 1.0)
        if p > 1
            float prev_weight = 1.0
            for i = 1 to p - 1
                float curr_weight = prev_weight * (p - i) / i
                array.set(weights, i, curr_weight)
                prev_weight := curr_weight
        last_p := p
    float sum = 0.0
    float weight_sum = 0.0
    for i = 0 to p - 1
        float price = source[i]
        if not na(price)
            float w = array.get(weights, i)
            sum += price * w
            weight_sum += w
    nz(sum / weight_sum, source)

// ---------- Main loop ----------

// Inputs
i_period = input.int(10, "Period", minval=1)
i_source = input.source(close, "Source")

// Calculation
pwma_value = pwma(i_source, i_period)

// Plot
plot(pwma_value, "PWMA", color.new(color.yellow, 0, color=color.yellow, linewidth=2), 2)
